// Code generated by MockGen. DO NOT EDIT.
// Source: internal/interfaces/job_grade.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/erinchen11/hr-system/internal/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockJobGradeRepository is a mock of JobGradeRepository interface.
type MockJobGradeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockJobGradeRepositoryMockRecorder
}

// MockJobGradeRepositoryMockRecorder is the mock recorder for MockJobGradeRepository.
type MockJobGradeRepositoryMockRecorder struct {
	mock *MockJobGradeRepository
}

// NewMockJobGradeRepository creates a new mock instance.
func NewMockJobGradeRepository(ctrl *gomock.Controller) *MockJobGradeRepository {
	mock := &MockJobGradeRepository{ctrl: ctrl}
	mock.recorder = &MockJobGradeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobGradeRepository) EXPECT() *MockJobGradeRepositoryMockRecorder {
	return m.recorder
}

// CreateJobGrade mocks base method.
func (m *MockJobGradeRepository) CreateJobGrade(ctx context.Context, jobGrade *models.JobGrade) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJobGrade", ctx, jobGrade)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateJobGrade indicates an expected call of CreateJobGrade.
func (mr *MockJobGradeRepositoryMockRecorder) CreateJobGrade(ctx, jobGrade interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJobGrade", reflect.TypeOf((*MockJobGradeRepository)(nil).CreateJobGrade), ctx, jobGrade)
}

// DeleteJobGrade mocks base method.
func (m *MockJobGradeRepository) DeleteJobGrade(ctx context.Context, id uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteJobGrade", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteJobGrade indicates an expected call of DeleteJobGrade.
func (mr *MockJobGradeRepositoryMockRecorder) DeleteJobGrade(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteJobGrade", reflect.TypeOf((*MockJobGradeRepository)(nil).DeleteJobGrade), ctx, id)
}

// GetJobGradeByCode mocks base method.
func (m *MockJobGradeRepository) GetJobGradeByCode(ctx context.Context, code string) (*models.JobGrade, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobGradeByCode", ctx, code)
	ret0, _ := ret[0].(*models.JobGrade)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobGradeByCode indicates an expected call of GetJobGradeByCode.
func (mr *MockJobGradeRepositoryMockRecorder) GetJobGradeByCode(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobGradeByCode", reflect.TypeOf((*MockJobGradeRepository)(nil).GetJobGradeByCode), ctx, code)
}

// GetJobGradeByID mocks base method.
func (m *MockJobGradeRepository) GetJobGradeByID(ctx context.Context, id uuid.UUID) (*models.JobGrade, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobGradeByID", ctx, id)
	ret0, _ := ret[0].(*models.JobGrade)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobGradeByID indicates an expected call of GetJobGradeByID.
func (mr *MockJobGradeRepositoryMockRecorder) GetJobGradeByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobGradeByID", reflect.TypeOf((*MockJobGradeRepository)(nil).GetJobGradeByID), ctx, id)
}

// ListJobGrades mocks base method.
func (m *MockJobGradeRepository) ListJobGrades(ctx context.Context) ([]models.JobGrade, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListJobGrades", ctx)
	ret0, _ := ret[0].([]models.JobGrade)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListJobGrades indicates an expected call of ListJobGrades.
func (mr *MockJobGradeRepositoryMockRecorder) ListJobGrades(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListJobGrades", reflect.TypeOf((*MockJobGradeRepository)(nil).ListJobGrades), ctx)
}

// UpdateJobGrade mocks base method.
func (m *MockJobGradeRepository) UpdateJobGrade(ctx context.Context, jobGrade *models.JobGrade) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJobGrade", ctx, jobGrade)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJobGrade indicates an expected call of UpdateJobGrade.
func (mr *MockJobGradeRepositoryMockRecorder) UpdateJobGrade(ctx, jobGrade interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJobGrade", reflect.TypeOf((*MockJobGradeRepository)(nil).UpdateJobGrade), ctx, jobGrade)
}
